"""initial migration

Revision ID: ea7efdf05a1e
Revises: 
Create Date: 2024-07-06 06:30:31.944641

"""

import sqlalchemy as sa
import sqlmodel.sql.sqltypes
from alembic import op

# revision identifiers, used by Alembic.
revision = "ea7efdf05a1e"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "grower",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("grower_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("id_card_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("company_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "company_registration_number",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("qr_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id_card_photo", sa.JSON(), nullable=True),
        sa.Column("land_ownership_certificate", sa.JSON(), nullable=True),
        sa.Column("crop_type_pic", sa.JSON(), nullable=True),
        sa.Column("business_license_photos", sa.JSON(), nullable=True),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "transaction",
        sa.Column("product_id", sa.Integer(), nullable=False),
        sa.Column("seller_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("seller_id", sa.Integer(), nullable=False),
        sa.Column("buyer_id", sa.Integer(), nullable=False),
        sa.Column("quantity", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("transaction_date", sa.DateTime(), nullable=False),
        sa.Column("parent_transaction_id", sa.Integer(), nullable=True),
        sa.Column("qr_code", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.ForeignKeyConstraint(
            ["parent_transaction_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("qr_code"),
    )
    op.create_table(
        "user",
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("is_superuser", sa.Boolean(), nullable=False),
        sa.Column("full_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "hashed_password", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_user_email"), "user", ["email"], unique=True)
    op.create_table(
        "item",
        sa.Column("title", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("description", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("owner_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["owner_id"],
            ["user.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "middleman",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("phone_number", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("email", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("middleman_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("purchase_type", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("id_card_number", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("company_name", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column(
            "company_registration_number",
            sqlmodel.sql.sqltypes.AutoString(),
            nullable=True,
        ),
        sa.Column(
            "legal_representative", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("qr_code", sqlmodel.sql.sqltypes.AutoString(), nullable=True),
        sa.Column("purchase_from_id", sa.Integer(), nullable=True),
        sa.Column("purchase_from_middleman_id", sa.Integer(), nullable=True),
        sa.Column("transaction_contracts", sa.JSON(), nullable=True),
        sa.Column("id_card_photo", sa.JSON(), nullable=True),
        sa.Column("business_license_photos", sa.JSON(), nullable=True),
        sa.ForeignKeyConstraint(
            ["purchase_from_id"],
            ["grower.id"],
        ),
        sa.ForeignKeyConstraint(
            ["purchase_from_middleman_id"],
            ["middleman.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "plot",
        sa.Column(
            "location_coordinates", sqlmodel.sql.sqltypes.AutoString(), nullable=False
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("grower_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["grower_id"],
            ["grower.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "consumer",
        sa.Column(
            "purchase_details", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column(
            "traceability_info", sqlmodel.sql.sqltypes.AutoString(), nullable=True
        ),
        sa.Column("middleman_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["middleman_id"],
            ["middleman.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "product",
        sa.Column("name", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("crop_type", sqlmodel.sql.sqltypes.AutoString(), nullable=False),
        sa.Column("total_yield", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("remaining_yield", sa.Float(), nullable=False),
        sa.Column("plot_id", sa.Integer(), nullable=False),
        sa.Column("grower_id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["grower_id"],
            ["grower.id"],
        ),
        sa.ForeignKeyConstraint(
            ["plot_id"],
            ["plot.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("product")
    op.drop_table("consumer")
    op.drop_table("plot")
    op.drop_table("middleman")
    op.drop_table("item")
    op.drop_index(op.f("ix_user_email"), table_name="user")
    op.drop_table("user")
    op.drop_table("transaction")
    op.drop_table("grower")
    # ### end Alembic commands ###
